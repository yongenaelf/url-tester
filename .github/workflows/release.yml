name: goreleaser

on:
  push:
    # run only against tags
    tags:
      - "*"

# You might not need all of this...
permissions:
  contents: write
  packages: write
  issues: write
  id-token: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # we'll need this for both 'zig build' and 'cargo zigbuild'
      - uses: mlugg/setup-zig@v2

      # only needed if using signing
      # - uses: sigstore/cosign-installer@v3.7.0
      # only needed if using SBOMs
      # - uses: anchore/sbom-action/download-syft@v0.17.9
      # only needed if using docker
      # - uses: docker/setup-qemu-action@v3
      # - uses: docker/setup-buildx-action@v3
      # - uses: docker/login-action@v3
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.repository_owner }}
      #     password: ${{ secrets.GITHUB_TOKEN }}
      #
      # NEW: Step to install OpenSSL development libraries on macOS runner
      # This ensures 'openssl/opensslconf.h' is found.
      - name: Install OpenSSL for Rust build (macOS)
        run: |
          brew update # Ensure Homebrew is up to date
          brew install openssl@3 # Install OpenSSL 3.x
          # Set environment variables so Cargo/Clang can find the Homebrew-installed OpenSSL
          echo "OPENSSL_LIB_DIR=$(brew --prefix openssl@3)/lib" >> $GITHUB_ENV
          echo "OPENSSL_INCLUDE_DIR=$(brew --prefix openssl@3)/include" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=$(brew --prefix openssl@3)/lib/pkgconfig" >> $GITHUB_ENV
        # Important: These environment variables will be available for all subsequent steps in this job.

      - uses: goreleaser/goreleaser-action@v6
        with:
          # either 'goreleaser' (default) or 'goreleaser-pro'
          distribution: goreleaser
          # 'latest', 'nightly', or a semver
          version: "~> v2"
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # used to push the homebrew tap
          GH_PAT: ${{ secrets.GH_PAT }}
          GH_OWNER: ${{ github.repository_owner }}
          GH_REPO: ${{ github.event.repository.name }}
          # Your GoReleaser Pro key.
          # Only needed if you're using the 'goreleaser-pro' distribution.
          # GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
